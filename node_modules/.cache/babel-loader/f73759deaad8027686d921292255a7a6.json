{"ast":null,"code":"var _jsxFileName = \"D:\\\\Descargas_\\\\final_v002\\\\final\\\\src\\\\components\\\\AnimeGrid.jsx\";\nimport { AnimeCard } from \"./AnimeCard.jsx\";\nimport styles from \"./AnimeGrid.module.css\";\nimport { Pagination } from \"./Pagination.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AnimeGrid(_ref) {\n  let {\n    animes,\n    page,\n    hasNextPage,\n    maxPages,\n    setPage\n  } = _ref;\n  // const[apiResponse, setApiResponse] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.animeGridList,\n    children: Array.from(animes).map(anime => /*#__PURE__*/_jsxDEV(AnimeCard, {\n      anime: anime\n    }, \"A-\" + anime.mal_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n}\n_c = AnimeGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeGrid\");","map":{"version":3,"sources":["D:/Descargas_/final_v002/final/src/components/AnimeGrid.jsx"],"names":["AnimeCard","styles","Pagination","AnimeGrid","animes","page","hasNextPage","maxPages","setPage","animeGridList","Array","from","map","anime","mal_id"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAoB,wBAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,OAAO,SAASC,SAAT,OAA+D;AAAA,MAA5C;AAACC,IAAAA,MAAD;AAAQC,IAAAA,IAAR;AAAaC,IAAAA,WAAb;AAAyBC,IAAAA,QAAzB;AAAkCC,IAAAA;AAAlC,GAA4C;AAClE;AAEA,sBACQ;AAAI,IAAA,SAAS,EAAEP,MAAM,CAACQ,aAAtB;AAAA,cACMC,KAAK,CAACC,IAAN,CAAWP,MAAX,EAAmBQ,GAAnB,CAAwBC,KAAD,iBACrB,QAAC,SAAD;AAAmC,MAAA,KAAK,EAAEA;AAA1C,OAAgB,OAAKA,KAAK,CAACC,MAA3B;AAAA;AAAA;AAAA;AAAA,YADF;AADN;AAAA;AAAA;AAAA;AAAA,UADR;AAOH;KAVeX,S","sourcesContent":["import { AnimeCard } from \"./AnimeCard.jsx\";\r\nimport styles  from \"./AnimeGrid.module.css\";\r\nimport { Pagination } from \"./Pagination.jsx\";\r\n\r\n\r\nexport function AnimeGrid({animes,page,hasNextPage,maxPages,setPage}) {\r\n    // const[apiResponse, setApiResponse] = useState([]);\r\n    \r\n    return (\r\n            <ul className={styles.animeGridList}>\r\n                { Array.from(animes).map((anime) => (\r\n                    <AnimeCard key={\"A-\"+anime.mal_id} anime={anime} />\r\n                    ))}\r\n            </ul>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}